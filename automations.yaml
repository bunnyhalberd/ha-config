- alias: "Run At Sunset 20 minutes before the actual sunset"
  trigger:
    platform: sun
    event: sunset
    offset: "-00:20:00"
  action:
    service: homeassistant.turn_on
    entity_id: scene.at_sunset

# This really should also be a scene, but let's see if this works for
# now while I think of a better way to do this. :)
- alias: "Turn off the front porch at sunrise"
  trigger:
    platform: sun
    event: sunrise
    offset: "00:20:00"
  action:
    service: homeassistant.turn_off
    entity_id: light.front_porch_light

# Trigger the "Away from Home" scene when we're all gone
- alias: "Everyone leaves the house"
  trigger:
    platform: state
    entity_id: group.all_furries
    to: "not_home"
  action:
    service: homeassistant.turn_on
    entity_id: scene.away_from_home

# Dim the lights at 9pm if I'm home
- alias: "Dim lights at 9:00pm"
  initial_state: true
  trigger:
    platform: time
    at: "21:00:00"
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - sun
          - mon
          - tue
          - wed
          - thu
      - condition: state
        entity_id: person.april
        state: home
  action:
    - service: scene.turn_on
      entity_id: scene.low_key

# Turn on the lights in the bathroom when it's dark and motion is detected
- alias: Turn on the bathroom stars with motion at night
  trigger:
    platform: state
    entity_id: binary_sensor.bathroom_motion
    to: "on"
  condition:
    condition: numeric_state
    entity_id: sensor.bathroom_luminance
    below: 10.0
  action:
    service: light.turn_on
    entity_id: light.bathroom_stars

- alias: Turn off the bathroom stars if it's night time
  trigger:
    platform: state
    entity_id: binary_sensor.bathroom_motion
    to: "off"
    for:
      minutes: 10
  condition:
    - condition: time
      after: "21:00:00"
      before: "07:00:00"
  action:
    service: light.turn_off
    entity_id: light.bathroom_stars

######################################3
#
# MQTT Events
#

# Living room
- alias: "MQTT - Living Room Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.living_room_motion_sensor_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/living_room/motion"
      payload_template: "{{ states.binary_sensor.living_room_motion_sensor_motion.state }}"

- alias: "MQTT - Living Room Temperature"
  trigger:
    platform: state
    entity_id: "sensor.living_room_motion_sensor_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/living_room/temperature"
      payload_template: "{{ states.sensor.living_room_motion_sensor_temperature.state }}"

# Laundry room
- alias: "MQTT - Laundry Room Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.laundry_room_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/laundry_room/motion"
      payload_template: "{{ states.binary_sensor.laundry_room_motion.state }}"

- alias: "MQTT - Laundry Room Temperature"
  trigger:
    platform: state
    entity_id: "sensor.laundry_room_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/laundry_room/temperature"
      payload_template: "{{ states.sensor.laundry_room_temperature.state }}"

- alias: "MQTT - Laundry Room Room Humidity"
  trigger:
    platform: state
    entity_id: "sensor.laundry_room_relative_humidity"
  action:
    service: mqtt.publish
    data:
      topic: "home/laundry_room/humidity"
      payload_template: "{{ states.sensor.laundry_room_relative_humidity.state }}"

# Bedroom
- alias: "MQTT - Bedroom Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.bedroom_motion_sensor_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/bedroom/motion"
      payload_template: "{{ states.binary_sensor.bedroom_motion_sensor_motion.state }}"

- alias: "MQTT - Bedroom Temperature"
  trigger:
    platform: state
    entity_id: "sensor.bedroom_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/bedroom/temperature"
      payload_template: "{{ states.sensor.bedroom_temperature.state }}"

# Bathroom
- alias: "MQTT - Bathroom Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.bathroom_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/bathroom/motion"
      payload_template: "{{ states.binary_sensor.bathroom_motion.state }}"

- alias: "MQTT - Bathroom Temperature"
  trigger:
    platform: state
    entity_id: "sensor.bathroom_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/bathroom/temperature"
      payload_template: "{{ states.sensor.bathroom_temperature.state }}"

- alias: "MQTT - Bathroom Room Humidity"
  trigger:
    platform: state
    entity_id: "sensor.bathroom_relative_humidity"
  action:
    service: mqtt.publish
    data:
      topic: "home/bathroom/humidity"
      payload_template: "{{ states.sensor.bathroom_relative_humidity.state }}"

# Office
- alias: "MQTT - Office Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.office_motion_sensor_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/office/motion"
      payload_template: "{{ states.binary_sensor.office_motion_sensor_motion.state }}"

- alias: "MQTT - Office Temperature"
  trigger:
    platform: state
    entity_id: "sensor.office_motion_sensor_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/office/temperature"
      payload_template: "{{ states.sensor.office_motion_sensor_temperature.state }}"

# Workshop
- alias: "MQTT - Workshop Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.guest_room_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/workshop/motion"
      payload_template: "{{ states.binary_sensor.guest_room_motion.state }}"

- alias: "MQTT - Workshop Temperature"
  trigger:
    platform: state
    entity_id: "sensor.guest_room_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/workshop/temperature"
      payload_template: "{{ states.sensor.guest_room_temperature.state }}"

- alias: "MQTT - Workshop Humidity"
  trigger:
    platform: state
    entity_id: "sensor.guest_room_relative_humidity"
  action:
    service: mqtt.publish
    data:
      topic: "home/workshop/humidity"
      payload_template: "{{ states.sensor.guest_room_relative_humidity.state }}"

# Outside
- alias: "MQTT - Outside Temperature"
  trigger:
    platform: state
    entity_id: "sensor.outside_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/temperature"
      payload_template: "{{ states.sensor.outside_temperature.state }}"

- alias: "MQTT - Outside Humidity"
  trigger:
    platform: state
    entity_id: "sensor.outside_humidity"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/humidity"
      payload_template: "{{ states.sensor.outside_humidity.state }}"

- alias: "MQTT - Outside Wind Gusts"
  trigger:
    platform: state
    entity_id: "sensor.wind_speed_max"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/wind_gusts"
      payload_template: "{{ states.sensor.wind_speed_max.state }}"

- alias: "MQTT - Outside Wind Avgerage"
  trigger:
    platform: state
    entity_id: "sensor.wind_speed_avg"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/wind_average"
      payload_template: "{{ states.sensor.wind_speed_avg.state }}"

- alias: "MQTT - Outside Conditions"
  trigger:
    platform: state
    entity_id: "weather.april_s_nest"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/conditions"
      payload_template: "{{ states.weather.april_s_nest.state }}"

- alias: "MQTT - Outside Sun"
  trigger:
    platform: state
    entity_id: "sun.sun"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/sun"
      payload_template: "{{ states.sun.sun.state }}"

- alias: "MQTT - Outside Air Quailty"
  trigger:
    platform: state
    entity_id: "sensor.airnow_aqi"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/air_quality"
      payload_template: "{{ states.sensor.airnow_aqi.state }}"

## Things!

# Living Room Heater
- alias: "MQTT - Living Room Heater State"
  trigger:
    platform: state
    entity_id: "switch.living_room_heater"
  action:
    service: mqtt.publish
    data:
      topic: "thing/living_room/heater/state"
      payload_template: "{{ states.switch.living_room_heater.state }}"

- alias: "MQTT - Living Room Heater Power"
  trigger:
    platform: state
    entity_id: "sensor.living_room_heater_power"
  action:
    service: mqtt.publish
    data:
      topic: "thing/living_room/heater/power"
      payload_template: "{{ states.sensor.living_room_heater_power.state }}"

# Bedroom Fan
- alias: "MQTT - Bedroom Fan State"
  trigger:
    platform: state
    entity_id: "switch.bedroom_fan"
  action:
    service: mqtt.publish
    data:
      topic: "thing/bedroom/fan/state"
      payload_template: "{{ states.switch.bedroom_fan.state }}"

- alias: "MQTT - Bedroom Fan Power"
  trigger:
    platform: state
    entity_id: "sensor.bedroom_fan_power"
  action:
    service: mqtt.publish
    data:
      topic: "thing/bedroom/fan/power"
      payload_template: "{{ states.sensor.bedroom_fan_power.state }}"

- alias: "MQTT - Everyone Home"
  trigger:
    platform: state
    entity_id: "group.all_furries"
  action:
    service: mqtt.publish
    data:
      topic: "people/furries/home"
      payload_template: "{{ states.group.all_furries.state }}"

- alias: "MQTT - Living Room TV"
  trigger:
    platform: state
    entity_id: "media_player.living_room_tv"
  action:
    service: mqtt.publish
    data:
      topic: "thing/living_room/tv/state"
      payload_template: "{{ states.media_player.living_room_tv.state }}"

- alias: "MQTT - Work Computer Camera"
  trigger:
    platform: state
    entity_id: "binary_sensor.aprils_home_mac_pro_camera_in_use"
  action:
    service: mqtt.publish
    data:
      topic: "thing/office/computer_camera/state"
      payload_template: "{{ states.binary_sensor.aprils_home_mac_pro_camera_in_use.state }}"

- alias: "MQTT - Work Computer Microphone"
  trigger:
    platform: state
    entity_id: "binary_sensor.aprils_home_mac_pro_microphone_in_use"
  action:
    service: mqtt.publish
    data:
      topic: "thing/office/computer_microphone/state"
      payload_template: "{{ states.binary_sensor.aprils_home_mac_pro_microphone_in_use.state }}"
